/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.penguinapple.nb.lista.de.tareas;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings.TimeIncrement;
import java.awt.Image;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reindhart
 */
public class NewTask extends javax.swing.JFrame {
    
    private final String nameGroup;
    private final int idGroup;
    private LocalDate today = LocalDate.now();
    private final DatePicker datePicker;
    private final TimePicker timePicker;
    private final DefaultTableModel tareas;

    
    public NewTask(Grupo group, DefaultTableModel tareas) {
        this.nameGroup = group.getNombre();
        this.idGroup = group.getId();
        this.tareas = tareas;
        
        initComponents();
        
        this.setTitle("Tarea para " + this.nameGroup);
        Image img = new ImageIcon(getClass().getResource("/img/wia_img_check-0.png")).getImage();
        this.setIconImage(img);
        
        datePicker = dtpDueDateTime.datePicker;
        timePicker = dtpDueDateTime.timePicker;

        DatePickerSettings dateSettings = datePicker.getSettings();        
        dateSettings.setDateRangeLimits(today, null);
        
        TimePickerSettings timeSettings = timePicker.getSettings();
        timeSettings.setFormatForDisplayTime("HH:mm");
        timeSettings.generatePotentialMenuTimes(TimeIncrement.FifteenMinutes, null, null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        lblDueDate = new javax.swing.JLabel();
        btnCancelTask = new javax.swing.JButton();
        btnAcceptTask = new javax.swing.JButton();
        txtDescription = new javax.swing.JTextField();
        dtpDueDateTime = new com.github.lgooddatepicker.components.DateTimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva Tarea");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDescription.setText("Descripción");
        jPanel1.add(lblDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lblDueDate.setText("Fecha limite");
        jPanel1.add(lblDueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        btnCancelTask.setText("Cancelar");
        btnCancelTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTaskActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        btnAcceptTask.setText("Aceptar");
        btnAcceptTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptTaskActionPerformed(evt);
            }
        });
        jPanel1.add(btnAcceptTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, -1));
        jPanel1.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 300, -1));
        jPanel1.add(dtpDueDateTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 300, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 134));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTaskActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelTaskActionPerformed

    private void btnAcceptTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptTaskActionPerformed
        String task = txtDescription.getText();
        String date = datePicker.getDateStringOrEmptyString();
        String time = timePicker.getTimeStringOrEmptyString();
        String date_time = "";

        if (date.isBlank() && !time.isBlank()) {
            date = today.toString();
        }

        // Validar si hay solo fecha
        if (!date.isBlank() && time.isBlank()) {
            time = "23:59";
        }

        if (!date.isBlank() && !time.isBlank()) {
            try {
                LocalDateTime dateTime = LocalDateTime.of(LocalDate.parse(date), LocalTime.parse(time));
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                date_time = dateTime.format(formatter);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(null, "La fecha u hora no tienen un formato válido.", "FORMATO INVÁLIDO", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        if (date.isBlank() && time.isBlank()){
            date_time = "---";
        }

        if (task.isBlank()) {
            JOptionPane.showMessageDialog(null, "Por favor ponga una descripción", "NO HAY DESCRIPCIÓN", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Integer id = SQLiteDatabase.addTask(idGroup, task, date_time);
        
        if (id != null){
            Object[] tarea = new Object[] {idGroup, false, task, date_time};
            tareas.addRow(tarea);
            dispose();
        }
    }//GEN-LAST:event_btnAcceptTaskActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptTask;
    private javax.swing.JButton btnCancelTask;
    private com.github.lgooddatepicker.components.DateTimePicker dtpDueDateTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JTextField txtDescription;
    // End of variables declaration//GEN-END:variables

}
